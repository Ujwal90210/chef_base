pipeline {
    try{
    agent {
      label 'chef' // only run on chef node
      }
    stages {
        stage('Fetch code'){
         slackSend color: "#439FE0", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}"
         steps{
             git credentialsId: 'be857a0bb56d8a8f7ed9dd90a6d9ae8d4876b582', url: 'https://github.com/Ujwal90210/chef_base.git'
         }
        }
        stage('Build') {
            steps {
                echo 'Building..'
                sh 'cd cookbooks/chef_base; berks vendor cookbooks' // build cookbook with all dependencies
            }
        }
        stage('Lint Tests') {
            steps {
                echo 'Testing..'
              //  sh 'cd cookbooks/chef_base; chef exec rake style:ruby' // run rubocop
              //  sh 'cd cookbooks/chef_base; chef exec rake style:chef' // run foodcritic
            }

        }
        stage('Unit Tests') {
            steps {
                echo 'Testing..'
              //  sh 'cd cookbooks/chef_base; chef exec rake style:ruby' // run rubocop
              //  sh 'cd cookbooks/chef_base; chef exec rake style:chef' // run foodcritic
                //sh 'foodcritic . --tags ~FC071'
                sh 'cd cookbooks/chef_base; chef exec rake unit' // run ChefSpec tests
            }

        }
        stage('Integration Tests') {
           steps {
                echo 'Integration...'
                // run kitchen test with a concurrency of 2 at a time
                sh 'cd cookbooks/chef_base; chef exec rake integration'
           }
            //post {
              //always {
                // publish serverspec results
                //junit 'serverspec*.xml'
              //}
            //}
       }
       stage('Complete pull request') {
           steps {
                echo 'Completing the pull request'
                echo 'execute git branch --set-upstream ${currentBranch} origin/${currentBranch}'
                // run kitchen test with a concurrency of 2 at a time
                sh 'cd cookbooks/chef_base; chef exec rake integration'
           }
       }
      stage('Tag Master') {
           steps {
                echo 'Tag master with version in metadata.rb'
           }
      }
       stage('Cookbook Release') {
           steps {
                echo 'Berks upload'
           }
       }
     
    }
   }
    catch (Exception e) {
    currentBuild.result = "FAILURE"
        slackSend color: "#ff0000", message: "Build Failed (${e.message}): ${env.JOB_NAME} ${env.BUILD_NUMBER}"
        throw e
    }
  post {
      always {
        deleteDir() /* clean up our workspace */
        
     }
  }
}
